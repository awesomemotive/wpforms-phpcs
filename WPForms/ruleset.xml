<?xml version="1.0"?>
<ruleset name="WPForms">
	<description>The code standard for WPForms.</description>

	<!-- What to scan -->
	<exclude-pattern>\.codeception/*</exclude-pattern>
	<exclude-pattern>\.packages/*</exclude-pattern>
	<exclude-pattern>\.vendor/*</exclude-pattern>
	<exclude-pattern>vendor/*</exclude-pattern>
	<exclude-pattern>vendor_prefixed/*</exclude-pattern>

	<!-- How to scan -->
	<arg name="colors"/>
	<arg name="parallel" value="12"/>
	<arg name="extensions" value="php"/>

	<config name="testVersion" value="7.0-"/>

	<!-- Rules: Check PHP version compatibility. -->
	<rule ref="PHPCompatibility">
		<!-- Rules: WordPress polyfills. -->
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.hash_equalsFound"/> <!-- @since WP 3.2.0 -->

		<!-- Rules: WPForms polyfills. -->
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.hrtimeFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.array_key_firstFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.array_key_lastFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.mb_ordFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.mb_chrFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.mb_scrubFound"/>
		<exclude name="PHPCompatibility.FunctionUse.NewFunctions.mb_str_splitFound"/>

		<!-- Whitelist the WP Core mysql_to_rfc3339() function. -->
		<rule ref="PHPCompatibility.Extensions.RemovedExtensions">
			<properties>
				<!-- Contained in /wp-includes/functions.php. -->
				<property name="functionWhitelist" type="array" value="mysql_to_rfc3339"/>
			</properties>
		</rule>
	</rule>

	<!-- Rules: WordPress Coding Standards -->
	<rule ref="WordPress">
		<!-- Allow less strict indenting and spacing. -->
		<exclude name="Generic.WhiteSpace.ScopeIndent.Incorrect"/>
		<exclude name="Generic.WhiteSpace.ScopeIndent.IncorrectExact"/>
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed"/>
		<exclude name="Generic.Functions.FunctionCallArgumentSpacing"/>
		<exclude name="WordPress.WhiteSpace.PrecisionAlignment.Found"/>
		<!-- Don't make comment formatting quite as strict. -->
		<exclude name="Squiz.Commenting.InlineComment.SpacingAfter"/>
		<exclude name="Squiz.Commenting.FileComment.Missing"/>
		<exclude name="Squiz.Commenting.FileComment.MissingPackageTag"/>
		<exclude name="Squiz.Commenting.FileComment.SpacingAfterComment"/>
		<exclude name="Squiz.Commenting.FileComment.WrongStyle"/>
		<!-- Rules to follow PSR4 -->
		<exclude name="WordPress.Files.FileName.InvalidClassFileName"/>
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase"/>
		<!-- Misc. -->
		<exclude name="WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents"/>
		<exclude name="WordPress.PHP.YodaConditions.NotYoda"/>
		<!-- WPCS 3.0 -->
		<exclude name="Universal.Arrays.DisallowShortArraySyntax.Found"/>
	</rule>

	<rule ref="WordPressVIPMinimum.Performance.WPQueryParams"/>

	<!-- Re-enable certain sniffs that were disabled by WordPress* standards. -->
	<rule ref="Squiz.Commenting.FunctionComment.ParamCommentNotCapital">
		<severity>5</severity>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.SpacingAfterParamName">
		<severity>5</severity>
	</rule>
	<rule ref="Generic.Commenting.DocComment.NonParamGroup">
		<severity>5</severity>
	</rule>
	<rule ref="Generic.Arrays.DisallowLongArraySyntax.Found"/>

	<rule ref="Generic.Metrics.CyclomaticComplexity">
		<properties>
			<property name="complexity" value="6"/>
			<property name="absoluteComplexity" value="10"/>
		</properties>
	</rule>

	<rule ref="Generic.Metrics.NestingLevel">
		<properties>
			<property name="absoluteNestingLevel" value="3"/>
		</properties>
	</rule>
</ruleset>
